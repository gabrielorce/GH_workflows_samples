name: Call Reusable Template Per Matrix Entry with JSON

on:
  workflow_dispatch:

#      GitHub Actions DOES NOT ALLOW SHARING MATRIX VALUES ACROSS JOBS NATIVELY.
#      If you must define the matrix in one job and then run steps in a separate job, youâ€™ll need to
#      output the matrix as JSON from the first job.
#      You can define a matrix using a JSON string, then convert it to an object using fromJSON(...)
#      We define the matrix JSON inside a separate set-matrix job.
#      We parse it with jq -c . to ensure it's a valid, compact JSON array.
#      fromJSON(...) lets GitHub Actions treat that JSON array as a matrix.include.
jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix  }}
    steps:
      - id: set
        run: |
          MATRIX_JSON=$(cat <<EOF
          [
            {
              "name": "CenterComm",
              "solution": "Applications/Solutions/CenterComm.sln",
              "project": "Applications/Projects/CenterComm.csproj"
            },
            {
              "name": "Accounting",
              "solution": "Applications/Solutions/Accounting.sln",
              "project": "Applications/Projects/Accounting.csproj"
            }
          ]
          EOF
          )
          echo "matrix=$(echo "$MATRIX_JSON" | jq -c .)" >> "$GITHUB_OUTPUT"  # 

# Matrix with reusable workflows:
  call-template:
    needs: set-matrix
    strategy:
      matrix:
        include: ${{ fromJSON(needs.set-matrix.outputs.matrix) }}
    uses: ./.github/workflows/matrix_template.yml
    with:
      name: ${{ matrix.name }}
      solution: ${{ matrix.solution }}
      project: ${{ matrix.project }}
